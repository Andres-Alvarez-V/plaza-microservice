{
	"openapi": "3.1.0",
	"info": {
		"title": "Users API - OpenAPI 3.0",
		"description": "",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://localhost:3001/api/v1"
		}
	],
	"paths": {
		"/admin/crearRestaurante": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Create restaurant",
				"description": "Create a new restaurant",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RestaurantCreate"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Missing data or with any wrong.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					}
				}
			}
		},
		"/propietario/crearPlato": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Create dish",
				"description": "Create a new dish",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DishCreate"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Missing data or with any wrong.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					}
				}
			}
		},
		"/propietario/actualizarPlato/{id}": {
			"put": {
				"tags": [
					"Users"
				],
				"summary": "Update dish",
				"description": "Update a dish",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID del plato a actualizar",
						"required": true,
						"schema": {
							"type": "number",
							"example": "3"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DishUpdate"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Missing data or with any wrong.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"404": {
						"description": "Dish/Restaurant not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					}
				}
			}
		},
		"/propietario/cambiarEstadoPlato/{id}": {
			"put": {
				"tags": [
					"Users"
				],
				"summary": "Change dish status",
				"description": "Change dish status",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "ID del plato a actualizar",
						"required": true,
						"schema": {
							"type": "number",
							"example": "3"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"activo": {
										"type": "boolean",
										"example": "true"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Missing data or with any wrong.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"404": {
						"description": "Dish/Restaurant not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					}
				}
			}
		},
		"/cliente/platos/{id_restaurante}": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get dishes",
				"description": "Get dishes by page, limit and categoriesId parameters to get a clean response. \nYou can provided the category array id if you want to filter by categroy. Otherwise dont provide it .\n\n Example with category: `/api/v1/cliente/platos/1?page=1&limit=10&categoriesId=1,3,5` \n\n Example without category: `/api/v1/cliente/platos/1?page=1&limit=10`",
				"parameters": [
					{
						"name": "id_restaurante",
						"in": "path",
						"description": "ID del restaurante",
						"required": true,
						"schema": {
							"type": "number",
							"example": "3"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number",
						"required": true,
						"schema": {
							"type": "number",
							"example": "1"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit of restaurants per page",
						"required": true,
						"schema": {
							"type": "number",
							"example": "10"
						}
					},
					{
						"name": "categoriesId",
						"in": "query",
						"description": "Category id array",
						"required": false,
						"schema": {
							"type": "string",
							"example": "1,2,3"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DishCreate"
								}
							}
						}
					},
					"400": {
						"description": "Missing data or with any wrong.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"404": {
						"description": "Restaurant not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					}
				}
			}
		},
		"/cliente/restaurantes": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get restaurants",
				"description": "Get restaurants by page and limit parameters to get a clean response. \n\n**Example:**`/api/v1/cliente/restaurantes?page=1&limit=10`",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Page number",
						"required": true,
						"schema": {
							"type": "number",
							"example": "1"
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Limit of restaurants per page",
						"required": true,
						"schema": {
							"type": "number",
							"example": "10"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RestaurantPaginatedResponse"
								}
							}
						}
					},
					"400": {
						"description": "Missing data or with any wrong.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					}
				}
			}
		},
		"/cliente/crearPedido": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Create order",
				"description": "Create a new order",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OrderRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SuccessfulResponse"
								}
							}
						}
					},
					"400": {
						"description": "Missing data or with any wrong.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"404": {
						"description": "User/Restaurant/Dish not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					},
					"409":{
						"description": "You could have an active order in progress.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FailResponse"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Authorization header using the Bearer scheme. Provide a valid JWT token."
			}
		},
		"schemas": {
			"RestaurantCreate": {
				"type": "object",
				"properties": {
					"nombre": {
						"type": "string"
					},
					"direccion": {
						"type": "string"
					},
					"id_propietario": {
						"type": "number"
					},
					"telefono": {
						"type": "string"
					},
					"urlLogo": {
						"type": "string"
					},
					"nit": {
						"type": "string"
					}
				}
			},
			"RestaurantPaginatedResponse": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"nombre": {
							"type": "string"
						},
						"urlLogo": {
							"type": "string"
						}
					}
				}
			},
			"DishCreate": {
				"type": "object",
				"properties": {
					"nombre": {
						"type": "string"
					},
					"id_categoria": {
						"type": "number"
					},
					"descripcion": {
						"type": "string"
					},
					"precio": {
						"type": "number"
					},
					"id_restaurante": {
						"type": "number"
					},
					"uri_imagen": {
						"type": "string"
					}
				}
			},
			"DishUpdate": {
				"type": "object",
				"properties": {
					"precio": {
						"type": "number",
						"default": "0"
					},
					"descripcion": {
						"type": "string",
						"default": "undefined"
					}
				}
			},
			"DishChosen":{
        "type": "object",
        "properties": {
          "id_plato": {
            "type": "integer"
          },
          "cantidad": {
            "type": "integer"
          }
        }
      },
      "OrderRequest": {
        "type": "object",
        "properties": {
          "id_restaurante": {
            "type": "integer"
          },
          "platos_escogidos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DishChosen"
            }
          }
        }
      },
			"SuccessfulResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"example": "successful confirmation message"
					}
				}
			},
			"FailResponse": {
				"type": "object",
				"properties": {
					"statusCode": {
						"type": "number",
						"example": "http status code"
					},
					"errorMessage": {
						"type": "string",
						"example": "fail message"
					}
				}
			}
		}
	},
	"security": [
		{
			"bearerAuth": []
		}
	]
}